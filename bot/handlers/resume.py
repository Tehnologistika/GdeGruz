

"""
Handler for the ‚Äú–í–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ‚Äù button.

‚Ä¢ –°—Ç–∞–≤–∏—Ç active = 1 (–≤–∫–ª—é—á–∞–µ—Ç —Ç—Ä–µ–∫–∏–Ω–≥).
‚Ä¢ –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤–æ–¥–∏—Ç–µ–ª—é –æ—Å–Ω–æ–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –ª–æ–∫–∞—Ü–∏–∏.
‚Ä¢ –£–≤–µ–¥–æ–º–ª—è–µ—Ç –¥–∏—Å–ø–µ—Ç—á–µ—Ä—Å–∫—É—é –≥—Ä—É–ø–ø—É.
"""

from aiogram import Router, F, types
import os
import logging

from db import set_active, get_phone
from bot.keyboards import location_kb

GROUP_CHAT_ID = int(os.getenv("GROUP_CHAT_ID", "0"))

router = Router(name=__name__)


@router.message(F.text == "–í–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ")
async def resume_tracking(message: types.Message):
    uid = message.from_user.id

    # 1. –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º —Ç—Ä–µ–∫–∏–Ω–≥
    await set_active(uid, True)

    # 2. –°–æ–æ–±—â–∞–µ–º –≤–æ–¥–∏—Ç–µ–ª—é –∏ –æ—Ç–¥–∞—ë–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    await message.answer(
        "–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–æ ‚úÖ\n"
        "–ù–µ –∑–∞–±—É–¥—å—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 12 —á–∞—Å–æ–≤.",
        reply_markup=location_kb(),
    )

    # 3. –£–≤–µ–¥–æ–º–ª—è–µ–º –¥–∏—Å–ø–µ—Ç—á–µ—Ä—Å–∫—É—é –≥—Ä—É–ø–ø—É
    if GROUP_CHAT_ID:
        phone = await get_phone(uid)
        caption = (
            f"‚úÖ –í–æ–¥–∏—Ç–µ–ª—å üìû {phone} –≤–æ–∑–æ–±–Ω–æ–≤–∏–ª –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ."
            if phone else
            f"‚úÖ –í–æ–¥–∏—Ç–µ–ª—å {uid} –≤–æ–∑–æ–±–Ω–æ–≤–∏–ª –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ."
        )
        try:
            await message.bot.send_message(GROUP_CHAT_ID, caption)
        except Exception as exc:
            logging.getLogger(__name__).warning("–ù–µ —É–¥–∞–ª–æ—Å—å —É–≤–µ–¥–æ–º–∏—Ç—å –≥—Ä—É–ø–ø—É: %s", exc)